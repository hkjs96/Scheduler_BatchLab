<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 1초 반복적 숫자 출력
	1. 1초 마다라는 스케줄 설정(작업이 아니다. 외부로 빠진다.) - Timer
	2. 1초마다 작업 수행시 메인스레드에는 영향을 주지 않는 별개의 스레드, 일정 갯수의 스레드(풀링-polling) - 스레드풀익스큐스터? -->
	
	<!-- 스케줄러 최대 5개까지 동작 -->
	<task:scheduler id="scheuler" pool-size="5" />
	
	<!-- ThreadPoolTaskExecutor instance -->
	<!-- 풀링 정책, 최대 몇개(pool-size), 대기(queue-capacity),
		 대기시간(keep-alive)최대 10개의 용량인데 2초안에 용량이 안생기면 어떻게 할것인가.
		거절 정책(rejection-policy) - ABORT 해당 작업 취소 -->
	<task:executor id="executor" pool-size="5" queue-capacity="5" keep-alive="2" rejection-policy="ABORT" />
	
	<!-- 스레드풀링, 스케줄러를 이용하여 할 작업을 정의하는 부분, PrintNumberJob 이 가진 PrintNumber -->
<!-- 	<task:scheduled-tasks></task:scheduled-tasks> -->

	<!-- 어노테이션을 이용하여 선언적프로그래밍이 가능하게 해준다. -->
	<task:annotation-driven scheduler="scheuler" executor="executor"/>
	
	<!-- 기본설정, 어노테이션으로 빈으로 (등록)돌려라라는 설정 -->
	<context:component-scan base-package="kr.or.ddit" />

</beans>
